import { IntColumn } from "../Column/Int/IntColumn";
import { DecimalColumn } from "../Column/Decimal/DecimalColumn";
import { StringColumn } from "../Column/String/StringColumn";
import { DateColumn } from "../Column/Date/DateColumn";
import { TimeColumn } from "../Column/Time/TimeColumn";
import { DateTimeColumn } from "../Column/DateTime/DateTimeColumn";
import { BlobColumn } from "../Column/Blob/BlobColumn";
import { EnumColumn } from "../Column/Enum/EnumColumn";
import { Connection } from "./Connection";
import { DoubleColumn } from "../Column/Double/DoubleColumn";
import { CreateTableOptions } from "./Type/CreateTableOptions";
import { IndexDefinitionTypeEnum } from "../Definition/Enum/IndexDefinitionTypeEnum";
import { TinyBlobColumn } from "../Column/Blob/TinyBlobColumn";
import { MediumBlobColumn } from "../Column/Blob/MediumBlobColumn";
import { LongBlobColumn } from "../Column/Blob/LongBlobColumn";
import { SmallIntColumn } from "../Column/Int/SmallIntColumn";
import { TinyIntColumn } from "../Column/Int/TinyIntColumn";
import { MediumIntColumn } from "../Column/Int/MediumIntColumn";
import { BigIntColumn } from "../Column/Int/BigIntColumn";
import { TextColumn } from "../Column/Text/TextColumn";
import { TinyTextColumn } from "../Column/Text/TinyTextColumn";
import { MediumTextColumn } from "../Column/Text/MediumTextColumn";
import { LongTextColumn } from "../Column/Text/LongTextColumn";
export declare class Table {
    private readonly name;
    private readonly connection;
    private readonly columns;
    private readonly alterModifications;
    private readonly standaloneModifications;
    private tableExists;
    constructor(name: string, connection: Connection, operations: Array<() => Promise<void>>, tableExists: boolean, options?: CreateTableOptions);
    id(name?: string): IntColumn;
    int(name: string): IntColumn;
    tinyint(name: string): TinyIntColumn;
    smallint(name: string): SmallIntColumn;
    mediumint(name: string): MediumIntColumn;
    bigint(name: string): BigIntColumn;
    decimal(name: string, precision?: number, scale?: number): DecimalColumn;
    double(name: string, precision?: number, scale?: number): DoubleColumn;
    string(name: string, length?: number): StringColumn;
    text(name: string): TextColumn;
    tinytext(name: string): TinyTextColumn;
    mediumtext(name: string): MediumTextColumn;
    longtext(name: string): LongTextColumn;
    enum(name: string, values: Array<string>): EnumColumn;
    date(name: string): DateColumn;
    time(name: string): TimeColumn;
    datetime(name: string): DateTimeColumn;
    blob(name: string): BlobColumn;
    tinyblob(name: string): TinyBlobColumn;
    mediumblob(name: string): MediumBlobColumn;
    longblob(name: string): LongBlobColumn;
    renameColumn(currentName: string, newName: string): this;
    dropColumn(name: string): this;
    addIndex(columnNames: Array<string>, name?: string, type?: IndexDefinitionTypeEnum): this;
    dropIndex(name: string): this;
    dropIndex(columnNames: Array<string>): this;
    setNullable(columnName: string, nullable: boolean): this;
    setDefault(columnName: string, defaultValue: string | number): this;
    drop(): this;
    private getDefaultIndexName;
    private getCreateTableQuery;
    private getAlterTableQuery;
}
