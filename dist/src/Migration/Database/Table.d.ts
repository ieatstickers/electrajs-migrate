import { IntColumnOptions } from "../Column/Int/IntColumnOptions";
import { DecimalColumnOptions } from "../Column/Decimal/DecimalColumnOptions";
import { StringColumnOptions } from "../Column/String/StringColumnOptions";
import { DateColumnOptions } from "../Column/Date/DateColumnOptions";
import { TimeColumnOptions } from "../Column/Time/TimeColumnOptions";
import { DateTimeColumnOptions } from "../Column/DateTime/DateTimeColumnOptions";
import { BlobColumnOptions } from "../Column/Blob/BlobColumnOptions";
import { EnumColumnOptions } from "../Column/Enum/EnumColumnOptions";
import { Connection } from "./Connection";
import { DoubleColumnOptions } from "../Column/Double/DoubleColumnOptions";
export declare class Table {
    private readonly name;
    private readonly connection;
    private readonly operations;
    private readonly columnAdditions;
    private tableExists;
    constructor(name: string, connection: Connection, operations: Array<() => Promise<void>>, tableExists: boolean);
    id(name?: string): this;
    int(name: string, options?: Partial<IntColumnOptions>): this;
    decimal(name: string, options?: Partial<DecimalColumnOptions>): this;
    double(name: string, options?: Partial<DoubleColumnOptions>): this;
    string(name: string, options?: Partial<StringColumnOptions>): this;
    enum(name: string, values: Array<string>, options?: Partial<EnumColumnOptions>): this;
    date(name: string, options?: Partial<DateColumnOptions>): this;
    time(name: string, options?: Partial<TimeColumnOptions>): this;
    datetime(name: string, options?: Partial<DateTimeColumnOptions>): this;
    blob(name: string, options?: Partial<BlobColumnOptions>): this;
    renameColumn(currentName: string, newName: string): this;
    dropColumn(name: string): this;
    addColumnIndex(columnName: string): this;
    dropColumnIndex(columnName: string): this;
    setColumnNullable(columnName: string, nullable: boolean): this;
    setColumnDefault(columnName: string, defaultValue: string | number): this;
    drop(): this;
}
